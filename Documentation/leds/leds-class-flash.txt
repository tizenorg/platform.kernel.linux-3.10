
Flash LED handling under Linux
==============================

Some LED devices provide two modes - torch and flash. In the LED subsystem
those modes are supported by LED class (see Documentation/leds/leds-class.txt)
and LED Flash class respectively. The torch mode related features are enabled
by default and the flash ones only if a driver declares it by setting
LED_DEV_CAP_FLASH flag.

In order to enable the support for flash LEDs CONFIG_LEDS_CLASS_FLASH symbol
must be defined in the kernel config. A LED Flash class driver must be
registered in the LED subsystem with led_classdev_flash_register function.

Following sysfs attributes are exposed for controlling flash LED devices:
(see Documentation/ABI/testing/sysfs-class-led-flash)
	- flash_brightness
	- max_flash_brightness
	- flash_timeout
	- max_flash_timeout
	- flash_strobe
	- flash_fault

A LED subsystem driver can be controlled also from the level of VideoForLinux2
subsystem. In order to enable this CONFIG_V4L2_FLASH_LED_CLASS symbol has to
be defined in the kernel config. The driver must call the v4l2_flash_init
function to get registered in the V4L2 subsystem. On remove the
v4l2_flash_release function has to be called (see <media/v4l2-flash.h>).

After proper initialization a V4L2 Flash sub-device is created. The sub-device
exposes a number of V4L2 controls, which allow for controlling a LED Flash class
device with use of its internal kernel API.
Opening the V4L2 Flash sub-device makes the LED subsystem sysfs interface
unavailable. The interface is re-enabled after the V4L2 Flash sub-device
is closed.
