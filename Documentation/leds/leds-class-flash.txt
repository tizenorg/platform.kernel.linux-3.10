
Flash LED handling under Linux
==============================

Some LED devices support two modes - torch and flash. In the LED subsystem
those modes are supported by LED class (see Documentation/leds/leds-class.txt)
and LED Flash class respectively. The torch mode related features are enabled
by default and the flash ones only if a driver declares it by setting
LED_DEV_CAP_FLASH flag.

In order to enable support for flash LEDs CONFIG_LEDS_CLASS_FLASH symbol
must be defined in the kernel config. A flash LED driver must register
in the LED subsystem with led_classdev_flash_register function to gain flash
related capabilities.

There are flash LED devices which can control more than one LED and allow for
strobing the sub-LEDs synchronously. A LED will be strobed synchronously with
the one whose identifier is written to the flash_sync_strobe sysfs attribute.
The list of available sub-LED identifiers can be read from the available_sync_leds
sysfs attribute. In order to enable the related settings the driver must set
LED_DEV_CAP_SYNC_STROBE flag.

Following sysfs attributes are exposed for controlling flash LED devices:

	- flash_brightness - flash LED brightness in microamperes (RW)
	- max_flash_brightness - maximum available flash LED brightness (RO)
	- flash_timeout - flash strobe duration in microseconds (RW)
	- max_flash_timeout - maximum available flash strobe duration (RO)
	- flash_strobe - flash strobe state (RW)
	- available_sync_leds - list of sub-LEDs available for flash strobe
				synchronization (RO)
	- flash_sync_strobe - identifier of the sub-LED to synchronize the flash
			      strobe with; 0 stands for no synchronization (RW)
	- flash_fault - list of flash faults that may have occurred:
		* led-over-voltage - flash controller voltage to the flash LED
			has exceededthe limit specific to the flash controller
		* flash-timeout-exceeded - the flash strobe was still on when
			the timeout set by the user has expired; not all flash
			controllers may set this in all such conditions
		* controller-over-temperature - the flash controller has
			overheated
		* controller-short-circuit - the short circuit protection
			of the flash controller has been triggered
		* led-power-supply-over-current - current in the LED power
			supply has exceeded the limit specific to the flash
			controller
		* indicator-led-fault - the flash controller has detected
			a short or open circuit condition on the indicator LED
		* led-under-voltage - flash controller voltage to the flash
			LED has been below the minimum limit specific to
			the flash
		* controller-under-voltage - the input voltage of the flash
			controller is below the limit under which strobing the
			flash at full current will not be possible. The condition
			persists until this flag is no longer set
		* led-over-temperature - the temperature of the LED has exceeded
			its allowed upper limit

		Flash faults are cleared, if possible, by reading the attribute.

A LED subsystem driver can be controlled also from the level of VideoForLinux2
subsystem. In order to enable this CONFIG_V4L2_FLASH_LED_CLASS symbol has to
be defined in the kernel config. The driver must call the v4l2_flash_init
function to get registered in the V4L2 subsystem. On remove the
v4l2_flash_release function has to be called (see <media/v4l2-flash.h>).

After proper initialization a V4L2 Flash sub-device is created. The sub-device
exposes a number of V4L2 controls, which allow for controlling a LED Flash class
device with use of its internal kernel API.
Opening the V4L2 Flash sub-device makes the LED subsystem sysfs interface
unavailable. The interface is re-enabled after the V4L2 Flash sub-device
is closed.
