From d8d188334712ee28e4205bb0f53319d5c466ed60 Mon Sep 17 00:00:00 2001
From: Sylwester Nawrocki <s.nawrocki@samsung.com>
Date: Mon, 27 May 2013 18:06:38 +0200
Subject: [PATCH 0243/1302] gpu: mali: Remove Exynos PM domain checks in debug
 code
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This fixes following compilation warning when Mali debug options are enabled:

  CC      drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.o
drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c: In function ‘_mali_osk_mem_iowrite32_relaxed’:
drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c:436: error: ‘EXYNOS4_G3D_CONFIGURATION’ undeclared (first use in this function)
drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c:436: error: (Each undeclared identifier is reported only once
drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c:436: error: for each function it appears in.)
drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c: In function ‘_mali_osk_mem_ioread32’:
drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c:453: error: ‘EXYNOS4_G3D_CONFIGURATION’ undeclared (first use in this function)
drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c: In function ‘_mali_osk_mem_iowrite32’:
drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c:469: error: ‘EXYNOS4_G3D_CONFIGURATION’ undeclared (first use in this function)

Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
Signed-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>
---
 drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c | 12 ------------
 1 file changed, 12 deletions(-)

diff --git a/drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c b/drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c
index 258f8b6..a97f990 100644
--- a/drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c
+++ b/drivers/gpu/arm/mali400/mali/linux/mali_osk_low_level_mem.c
@@ -432,10 +432,6 @@ void inline _mali_osk_mem_unreqregion( u32 phys, u32 size )
 
 void inline _mali_osk_mem_iowrite32_relaxed( volatile mali_io_address addr, u32 offset, u32 val )
 {
-#ifdef CONFIG_SLP_MALI_DBG
-	if (!(__raw_readl(EXYNOS4_G3D_CONFIGURATION) & 0x7))
-		panic("%s:addr[0x%x]\n", __func__, (u32)addr + offset);
-#endif
 	__raw_writel(cpu_to_le32(val),((u8*)addr) + offset);
 }
 
@@ -449,10 +445,6 @@ void inline _mali_osk_mem_iowrite32_relaxed_cpu( volatile mali_io_address addr,
 
 u32 inline _mali_osk_mem_ioread32( volatile mali_io_address addr, u32 offset )
 {
-#ifdef CONFIG_SLP_MALI_DBG
-	if (!(__raw_readl(EXYNOS4_G3D_CONFIGURATION) & 0x7))
-		panic("%s:addr[0x%x]\n", __func__, (u32)addr + offset);
-#endif
 	return ioread32(((u8*)addr) + offset);
 }
 
@@ -465,10 +457,6 @@ u32 inline _mali_osk_mem_ioread32_cpu(volatile mali_io_address addr, u32 offset)
 
 void inline _mali_osk_mem_iowrite32( volatile mali_io_address addr, u32 offset, u32 val )
 {
-#ifdef CONFIG_SLP_MALI_DBG
-	if (!(__raw_readl(EXYNOS4_G3D_CONFIGURATION) & 0x7))
-		panic("%s:addr[0x%x]\n", __func__, (u32)addr + offset);
-#endif
 	iowrite32(val, ((u8*)addr) + offset);
 }
 
-- 
1.8.3.2

