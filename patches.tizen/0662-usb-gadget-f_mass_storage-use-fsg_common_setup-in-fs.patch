From 6da409d4af402599d135f22d4f0273c42aee5d9c Mon Sep 17 00:00:00 2001
From: Andrzej Pietrasiewicz <andrzej.p@samsung.com>
Date: Thu, 18 Jul 2013 14:02:28 +0200
Subject: [PATCH 0662/1302] usb/gadget: f_mass_storage: use fsg_common_setup in
 fsg_common_init

fsg_common_init is a lengthy function. Now there are helper functions
which cover all parts of it. Use them.

Signed-off-by: Andrzej Pietrasiewicz <andrzej.p@samsung.com>
Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com>
Signed-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>
---
 drivers/usb/gadget/f_mass_storage.c | 19 +++----------------
 1 file changed, 3 insertions(+), 16 deletions(-)

diff --git a/drivers/usb/gadget/f_mass_storage.c b/drivers/usb/gadget/f_mass_storage.c
index ef4733c..2f6e3c3 100644
--- a/drivers/usb/gadget/f_mass_storage.c
+++ b/drivers/usb/gadget/f_mass_storage.c
@@ -3018,16 +3018,9 @@ struct fsg_common *fsg_common_init(struct fsg_common *common,
 		return ERR_PTR(-EINVAL);
 	}
 
-	/* Allocate? */
-	if (!common) {
-		common = kzalloc(sizeof *common, GFP_KERNEL);
-		if (!common)
-			return ERR_PTR(-ENOMEM);
-		common->free_storage_on_release = 1;
-	} else {
-		memset(common, 0, sizeof *common);
-		common->free_storage_on_release = 0;
-	}
+	common = fsg_common_setup(common, !!common);
+	if (IS_ERR(common))
+		return common;
 	common->sysfs = true;
 	common->state = FSG_STATE_IDLE;
 
@@ -3067,8 +3060,6 @@ struct fsg_common *fsg_common_init(struct fsg_common *common,
 	}
 	common->luns = curlun_it;
 
-	init_rwsem(&common->filesem);
-
 	for (i = 0, lcfg = cfg->luns; i < nluns; ++i, ++curlun_it, ++lcfg) {
 		struct fsg_lun *curlun;
 
@@ -3168,8 +3159,6 @@ buffhds_first_it:
 	common->can_stall = cfg->can_stall &&
 		!(gadget_is_at91(common->gadget));
 
-	spin_lock_init(&common->lock);
-	kref_init(&common->ref);
 
 	/* Tell the thread to start working */
 	common->thread_task =
@@ -3178,8 +3167,6 @@ buffhds_first_it:
 		rc = PTR_ERR(common->thread_task);
 		goto error_release;
 	}
-	init_completion(&common->thread_notifier);
-	init_waitqueue_head(&common->fsg_wait);
 
 	/* Information */
 	INFO(common, FSG_DRIVER_DESC ", version: " FSG_DRIVER_VERSION "\n");
-- 
1.8.3.2

