From a8a42403e0cbfdc07ce602b78306f2049682a732 Mon Sep 17 00:00:00 2001
From: Marek Szyprowski <m.szyprowski@samsung.com>
Date: Thu, 10 Oct 2013 10:05:06 +0200
Subject: [PATCH 0854/1302] media: fimc: fix clock management in suspend/resume
 path

Standard suspend/resume path is called after runtime resume of the given
device, so suspend/resume callbacks must do all clock management done also
by runtime pm to allow proper power domain shutdown.

Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
Signed-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>
---
 drivers/media/platform/exynos4-is/fimc-core.c | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/drivers/media/platform/exynos4-is/fimc-core.c b/drivers/media/platform/exynos4-is/fimc-core.c
index 6823ce0..8108334 100644
--- a/drivers/media/platform/exynos4-is/fimc-core.c
+++ b/drivers/media/platform/exynos4-is/fimc-core.c
@@ -1088,6 +1088,8 @@ static int fimc_resume(struct device *dev)
 	struct fimc_dev *fimc =	dev_get_drvdata(dev);
 	unsigned long flags;
 
+	clk_enable(fimc->clock[CLK_GATE]);
+
 	dbg("fimc%d: state: 0x%lx", fimc->id, fimc->state);
 
 	/* Do not resume if the device was idle before system suspend */
@@ -1109,15 +1111,20 @@ static int fimc_resume(struct device *dev)
 static int fimc_suspend(struct device *dev)
 {
 	struct fimc_dev *fimc =	dev_get_drvdata(dev);
+	int ret = 0;
 
 	dbg("fimc%d: state: 0x%lx", fimc->id, fimc->state);
 
 	if (test_and_set_bit(ST_LPM, &fimc->state))
-		return 0;
+		ret = 0;
 	if (fimc_capture_busy(fimc))
-		return fimc_capture_suspend(fimc);
+		ret = fimc_capture_suspend(fimc);
+
+	ret = fimc_m2m_suspend(fimc);
 
-	return fimc_m2m_suspend(fimc);
+	clk_disable(fimc->clock[CLK_GATE]);
+
+	return ret;
 }
 #endif /* CONFIG_PM_SLEEP */
 
-- 
1.8.3.2

